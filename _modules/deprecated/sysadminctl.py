# -*- coding: utf-8 -*-
'''
Add and remove users via `/usr/sbin/sysadminctl`. Only available on Mac OS X 10.10+
'''

import salt.utils
import logging

SYSADMINCTL = '/usr/sbin/sysadminctl'

log = logging.getLogger(__name__)

__virtualname__ = 'sysadminctl'


def __virtual__():
    if (__grains__.get('kernel') != 'Darwin' or
                __grains__['osrelease_info'] < (10, 11)):
        return False
    else:
        return __virtualname__


def user_delete(username, keep_home=False, secure=False):
    '''
    Delete a user from the local directory system on the minion.

    username
        The short username of the user to delete

    keep_home : False
        If true, do not delete the user's home directory

    secure : False
        Securely erase the user's home directory

    CLI Example:

    .. code-block:: bash

        salt '*' sysadminctl.user_delete admin
    '''
    cmd = '{0} -deleteUser {1}'.format(SYSADMINCTL, username)

    if keep_home:
        cmd += ' -keepHome'

    status = __salt__['cmd.retcode'](cmd)

    return True if status == 0 else False  # User not found = 255


def user_add(username, password=None, full_name=None, home=None, uid=None, hint=None, is_admin=False, picture=None):
    '''
    Add a user to the local directory system on the minion.

    username
        The short username of the user to delete

    password : None
        The user password

    full_name : None
        The user's full name

    home : None
        The user's home directory

    uid : None
        The user's UID, or empty if UID should be autogenerated.

    hint : None
        The password hint for the user being added.

    is_admin : False
        Whether the user should be a member of the local administrators group.

    picture : None
        Path to the picture associated with the account (shown at login and in users list).

    CLI Example:

    .. code-block:: bash

        salt '*' sysadminctl.user_add joe pa$$word "Joe Blow"
    '''
    cmd = '{0} -addUser {1}'.format(SYSADMINCTL, username)

    if full_name is not None:
        cmd += ' -fullName {0}'.format(full_name)

    if uid is not None:
        cmd += ' -UID {0}'.format(uid)

    if password is not None:
        cmd += ' -password {0}'.format(password)

    if hint is not None:
        cmd += ' -hint {0}'.format(hint)

    if home is not None:
        cmd += ' -home {0}'.format(home)

    if is_admin:
        cmd += ' -admin'

    if picture is not None:
        cmd += ' -picture {0}'.format(picture)

    return __salt__['cmd.run'](cmd)


def user_reset_password(username, password, hint=None):
    '''
    Change a local user's password.

    username
       The short username of the user to change password for

    password
        The new password

    hint : None
        The password hint for the new password.

    CLI Example:

    .. code-block:: bash

        salt '*' sysadminctl.user_reset_password admin newpassword
    '''
    # There is no return status for a user which is not found, or a user that already had their password set to the
    # given password. Basically we have to rely on NSLog() lines from stdout
    cmd = '{0} -resetPasswordFor {1} -newPassword {2}'.format(SYSADMINCTL, username, password)

    if hint is not None:
        cmd += ' -passwordHint {0}'.format(hint)

    return __salt__['cmd.run'](cmd)
